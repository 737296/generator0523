<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.codeapp.mapper.CodeMapper" >
  <resultMap id="BaseResultMap" type="com.example.codeapp.pojo.Code" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="codeduserid" property="codeduserid" jdbcType="INTEGER" />
    <result column="codename" property="codename" jdbcType="VARCHAR" />
    <result column="codetext" property="codetext" jdbcType="VARCHAR" />
    <result column="codeversion" property="codeversion" jdbcType="VARCHAR" />
    <result column="codetypeid" property="codetypeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, codeduserid, codename, codetext, codeversion, codetypeid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.codeapp.pojo.CodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from code
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from code
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.codeapp.pojo.CodeExample" >
    delete from code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.codeapp.pojo.Code" >
    insert into code (id, codeduserid, codename, 
      codetext, codeversion, codetypeid
      )
    values (#{id,jdbcType=INTEGER}, #{codeduserid,jdbcType=INTEGER}, #{codename,jdbcType=VARCHAR}, 
      #{codetext,jdbcType=VARCHAR}, #{codeversion,jdbcType=VARCHAR}, #{codetypeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.codeapp.pojo.Code" >
    insert into code
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="codeduserid != null" >
        codeduserid,
      </if>
      <if test="codename != null" >
        codename,
      </if>
      <if test="codetext != null" >
        codetext,
      </if>
      <if test="codeversion != null" >
        codeversion,
      </if>
      <if test="codetypeid != null" >
        codetypeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="codeduserid != null" >
        #{codeduserid,jdbcType=INTEGER},
      </if>
      <if test="codename != null" >
        #{codename,jdbcType=VARCHAR},
      </if>
      <if test="codetext != null" >
        #{codetext,jdbcType=VARCHAR},
      </if>
      <if test="codeversion != null" >
        #{codeversion,jdbcType=VARCHAR},
      </if>
      <if test="codetypeid != null" >
        #{codetypeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.codeapp.pojo.CodeExample" resultType="java.lang.Integer" >
    select count(*) from code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update code
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.codeduserid != null" >
        codeduserid = #{record.codeduserid,jdbcType=INTEGER},
      </if>
      <if test="record.codename != null" >
        codename = #{record.codename,jdbcType=VARCHAR},
      </if>
      <if test="record.codetext != null" >
        codetext = #{record.codetext,jdbcType=VARCHAR},
      </if>
      <if test="record.codeversion != null" >
        codeversion = #{record.codeversion,jdbcType=VARCHAR},
      </if>
      <if test="record.codetypeid != null" >
        codetypeid = #{record.codetypeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update code
    set id = #{record.id,jdbcType=INTEGER},
      codeduserid = #{record.codeduserid,jdbcType=INTEGER},
      codename = #{record.codename,jdbcType=VARCHAR},
      codetext = #{record.codetext,jdbcType=VARCHAR},
      codeversion = #{record.codeversion,jdbcType=VARCHAR},
      codetypeid = #{record.codetypeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.codeapp.pojo.Code" >
    update code
    <set >
      <if test="codeduserid != null" >
        codeduserid = #{codeduserid,jdbcType=INTEGER},
      </if>
      <if test="codename != null" >
        codename = #{codename,jdbcType=VARCHAR},
      </if>
      <if test="codetext != null" >
        codetext = #{codetext,jdbcType=VARCHAR},
      </if>
      <if test="codeversion != null" >
        codeversion = #{codeversion,jdbcType=VARCHAR},
      </if>
      <if test="codetypeid != null" >
        codetypeid = #{codetypeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.codeapp.pojo.Code" >
    update code
    set codeduserid = #{codeduserid,jdbcType=INTEGER},
      codename = #{codename,jdbcType=VARCHAR},
      codetext = #{codetext,jdbcType=VARCHAR},
      codeversion = #{codeversion,jdbcType=VARCHAR},
      codetypeid = #{codetypeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>